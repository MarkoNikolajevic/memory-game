{"version":3,"sources":["main.js"],"names":["cards","document","querySelectorAll","Array","from","openCards","moves","shuffle","array","currentIndex","length","temporaryValue","randomIndex","random","floor","deck","querySelector","newDeck","shuffCards","innerHTML","append","showCards","_loop","card","addEventListener","classList","add","firstElementChild","getAttribute","matched","movesCounter","unmatched","setTimeout","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","closeCards","i","contains","remove","stars","gameTimer","removeChild","lastElementChild","childNodes","setInterval","timer","min","sec"],"mappings":"aACA,IAAIA,MAAQC,SAASC,iBAAiB,SADtCF,MAAAG,MAAAC,KAAAJ,OACA,IAAIA,aACJA,MAAQG,EACJE,IAAAA,EACAC,IAAAA,EAKJ,SAASC,QAAQC,GAChB,IAFD,IAAAC,EAAAD,EAAAE,OAAAC,OAAAA,EAAAC,OAAAA,EAEoBJ,IAAfC,GAAJG,EAAiCD,KAAAA,MAAAA,KAAjCE,SAAAJ,GAKCE,EAAiBH,EALlBC,GAAiDG,GAEjDJ,EAAOC,GAAAA,EAAoBG,GAC1BA,EAAAA,GAAmBE,EAEnBH,OAAAA,EAID,IAAAI,KAAAd,SAAAe,cAAA,eACA,SAAAC,UAKA,IAAIC,EAAaX,QAAQP,OAH1Be,KAAAI,UAAA,GACAD,EAAajB,QAASe,SAAAA,GACtBD,KAAAK,OAASH,KAKP,SAFDI,YAAA,IAAAC,EAAA,SAGAC,GAKCA,EAAKC,iBAAiB,QAAS,WAHjCD,EAAAE,UAAAC,IAAA,YAAA,aACArB,UAASgB,KAATE,GACYA,IADSlB,UAAAK,QAAAL,UAAA,GAAAsB,kBAAAC,aAAA,eAAAvB,UAAA,GAAAsB,kBAAAC,aAAA,cAEnBL,UACCA,eACAlB,cAC8BA,IAA1BA,UAAAK,QAA0BL,UAAasB,GAAAA,kBAAkBC,aAAa,eAAiBvB,UAAasB,GAAAA,kBAAkBC,aAAa,eACtIC,YACAC,WAAAA,WACAzB,aAHDA,cAKC0B,KACAC,mBAjBHC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAGA,IAAA,IAAAC,EAAAC,EAAAtC,MAAAuC,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAA,CAAAX,EAAAe,EAAAM,QAHA,MAAAC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,QAAA,KAAAX,GAAAK,EAAAO,QAAAP,EAAAO,SAAA,QAAA,GAAAX,EAAA,MAAAC,IAMoB,SAAAW,aAuBpB,IAAK,IAAIC,EAAI,EAAGA,EAAI1C,UAAUK,OAAQqC,IAvBlB1C,UAAA0C,GAAAtB,UAAAuB,SAAA,aAAA3C,UAAA0C,GAAAtB,UAAAC,IAAA,cAAArB,UAAA0C,GAAAtB,UAAAwB,OAAA,YAAA,YAAA,cACM,SAAf1B,UAiBVlB,UAAA,GAAAoB,UAAAwB,OAAA,aAlBmB5C,UAAA,GAAAoB,UAAAC,IAAA,UAAA,WAAA,WAAArB,UAAA,GAAAoB,UAAAwB,OAAA,aAAA5C,UAAA,GAAAoB,UAAAC,IAAA,UAAA,WAAA,WAAA,SAAAK,YAAA1B,UAAA,GAAAoB,UAAAwB,OAAA,aAAA5C,UAAA,GAAAoB,UAAAC,IAAA,aAAArB,UAAA,GAAAoB,UAAAwB,OAAA,aAAA5C,UAAA,GAAAoB,UAAAC,IAAA,aAmBpB,SAAAI,eA8BAxB,QA5BDL,SAAAe,cAAA,UAAAG,UAAAb,MACA,IAAA4C,EAASJ,SAAa9B,cAAA,UACrB,IAAAV,MACC6C,YAGC,GAAA7C,OAAAA,MAAA,GACD4C,EAAAE,YAAAF,EAAAG,kBACD,GAAA/C,OAAA,IAAA4C,EAAAI,YA8BCJ,EAAME,YAAYF,EAAMG,kBAxBzBhD,IAAAA,MAAaoB,SAAbT,cAA8B,UAE9B,SAAAmC,YA8BAI,YAAY,WA5BbC,MAAArC,UAAAsC,IAAA,QAAAC,IAAA,OAEcjC,OADdiC,MAECrD,MACAA,IAAAA,IAEA,KAIAC,SAAAA,iBAAAA,mBAAAA,WACAL,UACAoB","file":"main.min.js","sourcesContent":["// Create an array of all cards\nlet cards = document.querySelectorAll(\".card\");\ncards = Array.from(cards);\nlet openCards = [];\nlet moves = 0;\nlet sec = 0;\nlet min = 0;\n\n// Shuffle function from http://stackoverflow.com/a/2450976\nfunction shuffle(array) {\n\tlet currentIndex = array.length, temporaryValue, randomIndex;\n\n\twhile (currentIndex !== 0) {\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\treturn array;\n}\n\n// Create new deck\nconst deck = document.querySelector(\".card-board\");\nfunction newDeck() {\n\tlet shuffCards = shuffle(cards);\n\tdeck.innerHTML = \"\";\n\tshuffCards.forEach(function(el) {\n\t\tdeck.append(el);\n\t});\n}\n\n// Show cards function\nfunction showCards() {\n\tfor (const card of cards) {\n\t\tcard.addEventListener(\"click\", function() {\n\t\t\tcard.classList.add(\"card-open\", \"card-show\");\n\t\t\topenCards.push(card);\n\t\t\tif (openCards.length === 2 && openCards[0].firstElementChild.getAttribute(\"data-icon\") === openCards[1].firstElementChild.getAttribute(\"data-icon\")) {\n\t\t\t\tmatched();\n\t\t\t\tmovesCounter();\n\t\t\t\topenCards = [];\n\t\t\t} else if (openCards.length === 2 && openCards[0].firstElementChild.getAttribute(\"data-icon\") !== openCards[1].firstElementChild.getAttribute(\"data-icon\")) {\n\t\t\t\tunmatched();\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tcloseCards();\n\t\t\t\t\topenCards = [];\n\t\t\t\t}, 800);\n\t\t\t\tmovesCounter();\n\t\t\t}\n\t\t});\n\t}\n}\n\n// Close cards\nfunction closeCards() {\n\tfor (let i = 0; i < openCards.length; i++) {\n\t\tif (!openCards[i].classList.contains(\"matched\")) {\n\t\t\topenCards[i].classList.add(\"card-close\");\n\t\t\topenCards[i].classList.remove(\"card-open\", \"card-show\", \"unmatched\");\n\t\t}\n\t}\n}\n\n// Matched\nfunction matched() {\n\topenCards[0].classList.remove(\"card-open\");\n\topenCards[0].classList.add(\"matched\", \"disabled\", \"correct\");\n\topenCards[1].classList.remove(\"card-open\");\n\topenCards[1].classList.add(\"matched\", \"disabled\", \"correct\");\n}\n\n// Unmatched\nfunction unmatched() {\n\topenCards[0].classList.remove(\"card-open\");\n\topenCards[0].classList.add(\"unmatched\");\n\topenCards[1].classList.remove(\"card-open\");\n\topenCards[1].classList.add(\"unmatched\");\n}\n\n// Moves counter\nfunction movesCounter() {\n\tmoves++;\n\tdocument.querySelector(\".moves\").innerHTML = moves;\n\tconst stars = document.querySelector(\".stars\");\n\tif (moves === 1) {\n\t\tgameTimer();\n\t}\n\t// Star rating\n\telse if (moves > 10 && moves < 13) {\n\t\tstars.removeChild(stars.lastElementChild);\n\t} else if (moves > 13 && stars.childNodes === 2) {\n\t\tstars.removeChild(stars.lastElementChild);\n\t}\n}\n\n//  Timer\nconst timer = document.querySelector(\".timer\");\n\nfunction gameTimer() {\n\tsetInterval(function() {\n\t\ttimer.innerHTML = `${min} min ${sec} sec`;\n\t\tsec++;\n\t\tif (sec === 60) {\n\t\t\tmin++;\n\t\t\tsec = 0;\n\t\t}\n\t}, 1000);\n}\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n\tnewDeck();\n\tshowCards();\n});\n"]}