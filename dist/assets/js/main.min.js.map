{"version":3,"sources":["main.js"],"names":["cards","document","querySelectorAll","Array","from","deck","openCards","querySelector","matchedCards","timer","interval","moves","sec","min","stars","restart","shuffle","array","currentIndex","length","temporaryValue","randomIndex","random","floor","shuffCards","innerHTML","forEach","el","append","newDeck","showCards","_loop","card","addEventListener","classList","add","firstElementChild","getAttribute","contains","matched","showModal","unmatched","movesCounter","setTimeout","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","closeCards","i","remove","gameTimer","setInterval","restartGame","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","clearInterval","finalTime","finalMoves","finalStars","modalBtn","modal"],"mappings":"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","file":"main.min.js","sourcesContent":["// Define variables\nlet cards = document.querySelectorAll(\".card\");\ncards = Array.from(cards);\nconst deck = document.querySelector(\".card-board\");\nlet openCards = [];\nconst matchedCards = [];\nconst timer = document.querySelector(\".timer\");\nlet interval;\nlet moves = 0;\nlet sec = 0;\nlet min = 0;\nconst stars = document.querySelector(\".stars\");\nconst restart = document.querySelector(\".restart\");\nconst modal = document.querySelector(\".modal\");\nconst modalBtn = document.querySelector(\".play-again-btn\");\n\n// Shuffle function from http://stackoverflow.com/a/2450976\nfunction shuffle(array) {\n\tlet currentIndex = array.length, temporaryValue, randomIndex;\n\n\twhile (currentIndex !== 0) {\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\treturn array;\n}\n\n// Create new deck\nfunction newDeck() {\n\tlet shuffCards = shuffle(cards);\n\tdeck.innerHTML = \"\";\n\tshuffCards.forEach(function(el) {\n\t\tdeck.append(el);\n\t});\n}\n\n// Show cards function\nfunction showCards() {\n\tfor (const card of cards) {\n\t\tcard.addEventListener(\"click\", function() {\n\t\t\tcard.classList.add(\"card-open\", \"card-show\");\n\t\t\topenCards.push(card);\n\t\t\tif (openCards.length === 2 && openCards[0].firstElementChild.getAttribute(\"data-icon\") === openCards[1].firstElementChild.getAttribute(\"data-icon\")) {\n\t\t\t\tmatched();\n\t\t\t\tif (card.classList.contains(\"matched\")) {\n\t\t\t\t\tmatchedCards.push(card);\n\t\t\t\t\tif (matchedCards.length === 8) {\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tshowModal();\n\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmovesCounter();\n\t\t\t\topenCards = [];\n\t\t\t} else if (openCards.length === 2 && openCards[0].firstElementChild.getAttribute(\"data-icon\") !== openCards[1].firstElementChild.getAttribute(\"data-icon\")) {\n\t\t\t\tunmatched();\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tcloseCards();\n\t\t\t\t\topenCards = [];\n\t\t\t\t}, 800);\n\t\t\t\tmovesCounter();\n\t\t\t}\n\t\t});\n\t}\n}\n\n// Close cards\nfunction closeCards() {\n\tfor (let i = 0; i < openCards.length; i++) {\n\t\tif (!openCards[i].classList.contains(\"matched\")) {\n\t\t\topenCards[i].classList.add(\"card-close\");\n\t\t\topenCards[i].classList.remove(\"card-open\", \"card-show\", \"unmatched\");\n\t\t}\n\t}\n}\n\n// Matched\nfunction matched() {\n\topenCards[0].classList.remove(\"card-open\");\n\topenCards[0].classList.add(\"matched\", \"disabled\", \"correct\");\n\topenCards[1].classList.remove(\"card-open\");\n\topenCards[1].classList.add(\"matched\", \"disabled\", \"correct\");\n}\n\n// Unmatched\nfunction unmatched() {\n\topenCards[0].classList.remove(\"card-open\");\n\topenCards[0].classList.add(\"unmatched\");\n\topenCards[1].classList.remove(\"card-open\");\n\topenCards[1].classList.add(\"unmatched\");\n}\n\n// Moves counter\nfunction movesCounter() {\n\tmoves++;\n\tdocument.querySelector(\".moves\").innerHTML = moves;\n\tif (moves === 1) {\n\t\tgameTimer();\n\t}\n\t// Star rating\n\telse if (moves > 10 && moves < 12) {\n\t\tstars.innerHTML = \"<i class='fas fa-star'></i><i class='fas fa-star'></i>\";\n\t} else if (moves > 12) {\n\t\tstars.innerHTML = \"<i class='fas fa-star'></i>\";\n\t}\n}\n\n//  Timer\nfunction gameTimer() {\n\tinterval = setInterval(function() {\n\t\ttimer.innerHTML = `${min} min ${sec} sec`;\n\t\tsec++;\n\t\tif (sec === 60) {\n\t\t\tmin++;\n\t\t\tsec = 0;\n\t\t}\n\t}, 1000);\n}\n\n// Restart the game\nfunction restartGame() {\n\tnewDeck();\n\t// Remove all classes\n\tfor (const card of cards) {\n\t\tcard.classList.remove(\"matched\", \"disabled\", \"correct\", \"card-show\", \"card-close\");\n\t}\n\t// Reset moves\n\tmoves = 0;\n\tdocument.querySelector(\".moves\").innerHTML = moves;\n\t// Reset timer\n\tmin = 0;\n\tsec = 0;\n\ttimer.innerHTML = `${min} min ${sec} sec`;\n\tclearInterval(interval);\n\t// Reset stars\n\tstars.innerHTML = \"<i class='fas fa-star'></i><i class='fas fa-star'></i><i class='fas fa-star'></i>\";\n\n}\n\nrestart.addEventListener(\"click\", restartGame);\n\n// Congratulations modal\nfunction showModal() {\n\tmodal.classList.add(\"show-modal\");\n\t// Get final time\n\tclearInterval(interval);\n\tconst finalTime = timer.innerHTML;\n\t// Get final moves\n\tconst finalMoves = document.querySelector(\".moves\").innerHTML;\n\t// Get final stars\n\tconst finalStars = stars.childElementCount;\n\n\tconst gameInfo = document.querySelector(\".game-info\");\n\tgameInfo.innerHTML = `You finished the game in ${finalTime} with ${finalMoves} moves and got ${finalStars} stars`;\n}\n// Close modal\nmodalBtn.addEventListener(\"click\", function() {\n\tmodal.classList.remove(\"show-modal\");\n\trestartGame();\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n\tnewDeck();\n\tshowCards();\n});\n"]}